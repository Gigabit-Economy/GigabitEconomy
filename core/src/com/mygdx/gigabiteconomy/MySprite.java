package com.mygdx.gigabiteconomy;

import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.Sprite;
import com.badlogic.gdx.graphics.g2d.TextureAtlas;
import com.badlogic.gdx.graphics.g2d.TextureRegion;
import com.badlogic.gdx.utils.Array;

/**
 * Class represents a sprite shown on screen, ready to be drawn with batch.draw(); in MainScreen class
 * MainScreen interfaces with this class through ISprite
 */
public class MySprite implements ISprite {
    TextureAtlas ta;
    //Coordinates of sprite on screen
    private int[] coords = new int[2];
    //Array of regions in spritesheet
    private Array<TextureAtlas.AtlasRegion> regions;
    //Current image being displayed in the movement animation
    private TextureRegion current;

    boolean moving; //Can use for paused? Also useful for player (holding down keys)
    private int[] dcoords = new int[2]; //Increment of each x, y if moving is true

    /**
     * Constructor used to create a new sprite
     * @param config Config file, name of .txt file generated by TexturePacker application
     * @param x Initial x
     * @param y Initial y
     */
    public MySprite(String config, int x, int y) {
        ta = new TextureAtlas(config);

        regions = ta.getRegions();
        System.out.println(regions.get(0));

        current = regions.get(0); //Change to more general name to fit with all sprites
                                                              //See about exceptions and error handling here
        coords[0] = x; coords[1] = y;
    }


    @Override
    public TextureRegion getCurrRegion() {
        return current;
    }

    @Override
    public int getX() {
        return coords[0];
    }

    @Override
    public int getY() {
        return coords[1];
    }


    public void setDCoords(int dx, int dy) {
        dcoords[0] += dx; dcoords[1] += dy;
    }


    public void setMoving(boolean moving) {
        this.moving = moving;
        if (!moving) dcoords[0] = dcoords[1] = 0;
    }

    public boolean isMoving() {
        return moving;
    }


    public void move() {
        coords[0] += dcoords[0]; coords[1] += dcoords[1];
        //Changing current sprite
        //current = regions.get(regions.indexOf((TextureAtlas.AtlasRegion) current, true)+1);
        current = regions.get((regions.indexOf((TextureAtlas.AtlasRegion) current, true) + 1) % regions.size);

    }

}
